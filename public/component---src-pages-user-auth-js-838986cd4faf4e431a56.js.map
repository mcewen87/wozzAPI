{"version":3,"sources":["webpack:///./src/pages/userAuth.js"],"names":["UserAuth","state","email","password","isError","handleEmail","e","setState","target","value","handlePassword","userSignIn","a","fetch","process","mode","cache","credentials","headers","method","token","Cookies","get","body","JSON","stringify","catch","error","data","ok","console","log","json","then","content","props","changeAuth","authStatus","userSignUp","render","className","auth","authBox","innerBox","this","errorMessage","placeholder","type","onChange","buttons","onClick","alert","Component","connect","isAuthed"],"mappings":"8gBAOMA,E,4JACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,GACVC,SAAS,G,EAGXC,YAAc,SAAAC,GACZ,EAAKC,SAAS,CAAEL,MAAOI,EAAEE,OAAOC,S,EAGlCC,eAAiB,SAAAJ,GACf,EAAKC,SAAS,CAAEJ,SAAUG,EAAEE,OAAOC,S,EAGrCE,W,6BAAa,WAAOT,EAAOC,GAAd,iBAAAS,EAAA,sEACLC,MAAMC,sCAA8B,CACxCC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,eAAgB,oBAElBC,OAAQ,QARC,cAULC,EAAQC,IAAQC,IAAI,cAVf,SAWQT,MAAMC,oCAA4B,CACnDS,KAAMC,KAAKC,UAAU,CAAEvB,MAAOA,EAAOC,SAAUA,IAC/CY,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChB,aAAcE,GAEhBD,OAAQ,SACPO,OAAM,SAAAC,GAAK,OAAI,EAAKpB,SAAS,CAAEH,SAAS,OArBhC,QAWLwB,EAXK,QAsBFC,IACPC,QAAQC,IAAIH,EAAKC,IACjBD,EAAKI,OAAOC,MAAK,SAAAC,GACfJ,QAAQC,IAAIG,GACZ,EAAKC,MAAMC,WAAWF,EAAQG,YAC9B,EAAK9B,SAAS,CACZL,MAAO,GACPC,SAAU,GACVC,SAAS,QAIb,EAAKG,SAAS,CACZH,SAAS,IAnCF,2C,0DAwCbkC,W,6BAAa,WAAOpC,EAAOC,GAAd,iBAAAS,EAAA,sEACLC,MAAMC,sCAA8B,CACxCC,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,eAAgB,oBAElBC,OAAQ,QARC,cAULC,EAAQC,IAAQC,IAAI,cAVf,SAWQT,MAAMC,oCAA4B,CACnDS,KAAMC,KAAKC,UAAU,CAAEvB,MAAOA,EAAOC,SAAUA,IAC/CY,KAAM,OACNC,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,eAAgB,mBAChB,aAAcE,GAEhBD,OAAQ,SACPO,OAAM,SAAAC,GAAK,OAAI,EAAKpB,SAAS,CAAEH,SAAS,OArBhC,QAWLwB,EAXK,QAsBFC,IACPC,QAAQC,IAAIH,EAAKC,IACjBD,EAAKI,OAAOC,MAAK,SAAAC,GACfJ,QAAQC,IAAIG,GACZ,EAAKC,MAAMC,WAAWF,EAAQG,YAC9B,EAAK9B,SAAS,CACZL,MAAO,GACPC,SAAU,GACVC,SAAS,QAIb,EAAKG,SAAS,CACZH,SAAS,IAnCF,2C,oKAwCbmC,OAAA,WAAU,IAAD,OACP,OACE,yBAAKC,UAAWC,IAAKC,SACnB,yBAAKF,UAAWC,IAAKE,UAClBC,KAAK3C,MAAMG,SACV,uBAAGoC,UAAWC,IAAKI,cAAnB,+BAEF,2BACEL,UAAU,GACVM,YAAY,QACZC,KAAK,OACLtC,MAAOmC,KAAK3C,MAAMC,MAClB8C,SAAUJ,KAAKvC,cAEjB,2BACEmC,UAAU,GACVM,YAAY,WACZC,KAAK,WACLtC,MAAOmC,KAAK3C,MAAME,SAClB6C,SAAUJ,KAAKlC,iBAEjB,yBAAK8B,UAAWC,IAAKQ,SACnB,4BACEC,QAAS,WACP,EAAKvC,WAAW,EAAKV,MAAMC,MAAO,EAAKD,MAAME,YAFjD,WAOA,4BACE+C,QAAS,WACP,EAAKZ,WAAW,EAAKrC,MAAMC,MAAO,EAAKD,MAAME,YAFjD,WAOA,4BACE+C,QAAS,WACPC,MAAM,cAFV,YAOA,4BACED,QAAS,WACPC,MAAM,UAFV,kB,GA1IWC,aA4JRC,uBAJf,SAAyBpD,GACvB,MAAO,CAAEqD,SAAUrD,EAAMoC,cAKzB,CAAED,gBAFWiB,CAGbrD","file":"component---src-pages-user-auth-js-838986cd4faf4e431a56.js","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { changeAuth } from \"../actions/changeAuth\"\nimport Cookies from \"js-cookie\"\n\nimport auth from \"../components/userAuth.module.scss\"\n\nclass UserAuth extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    isError: false,\n  }\n\n  handleEmail = e => {\n    this.setState({ email: e.target.value })\n  }\n\n  handlePassword = e => {\n    this.setState({ password: e.target.value })\n  }\n\n  userSignIn = async (email, password) => {\n    await fetch(process.env.API + \"getToken\", {\n      mode: \"cors\", // no-cors, cors, *include\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"include\", // include, *include, omit\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      method: \"GET\",\n    })\n    const token = Cookies.get(\"XSRF-TOKEN\")\n    const data = await fetch(process.env.API + \"signIn\", {\n      body: JSON.stringify({ email: email, password: password }),\n      mode: \"cors\", // no-cors, cors, *include\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"include\", // include, *include, omit\n      headers: {\n        \"content-type\": \"application/json\",\n        \"csrf-token\": token,\n      },\n      method: \"POST\",\n    }).catch(error => this.setState({ isError: true }))\n    if (data.ok) {\n      console.log(data.ok)\n      data.json().then(content => {\n        console.log(content)\n        this.props.changeAuth(content.authStatus)\n        this.setState({\n          email: \"\",\n          password: \"\",\n          isError: false,\n        })\n      })\n    } else {\n      this.setState({\n        isError: true,\n      })\n    }\n  }\n\n  userSignUp = async (email, password) => {\n    await fetch(process.env.API + \"getToken\", {\n      mode: \"cors\", // no-cors, cors, *include\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"include\", // include, *include, omit\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      method: \"GET\",\n    })\n    const token = Cookies.get(\"XSRF-TOKEN\")\n    const data = await fetch(process.env.API + \"signUp\", {\n      body: JSON.stringify({ email: email, password: password }),\n      mode: \"cors\", // no-cors, cors, *include\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"include\", // include, *include, omit\n      headers: {\n        \"content-type\": \"application/json\",\n        \"csrf-token\": token,\n      },\n      method: \"POST\",\n    }).catch(error => this.setState({ isError: true }))\n    if (data.ok) {\n      console.log(data.ok)\n      data.json().then(content => {\n        console.log(content)\n        this.props.changeAuth(content.authStatus)\n        this.setState({\n          email: \"\",\n          password: \"\",\n          isError: false,\n        })\n      })\n    } else {\n      this.setState({\n        isError: true,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className={auth.authBox}>\n        <div className={auth.innerBox}>\n          {this.state.isError && (\n            <p className={auth.errorMessage}>Oops, something went wrong.</p>\n          )}\n          <input\n            className=\"\"\n            placeholder=\"Email\"\n            type=\"text\"\n            value={this.state.email}\n            onChange={this.handleEmail}\n          />\n          <input\n            className=\"\"\n            placeholder=\"Password\"\n            type=\"password\"\n            value={this.state.password}\n            onChange={this.handlePassword}\n          />\n          <div className={auth.buttons}>\n            <button\n              onClick={() => {\n                this.userSignIn(this.state.email, this.state.password)\n              }}\n            >\n              Sign In\n            </button>\n            <button\n              onClick={() => {\n                this.userSignUp(this.state.email, this.state.password)\n              }}\n            >\n              Sing Up\n            </button>\n            <button\n              onClick={() => {\n                alert(\"Click Em\")\n              }}\n            >\n              Sing Out\n            </button>\n            <button\n              onClick={() => {\n                alert(\"auth\")\n              }}\n            >\n              Check Auth\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { isAuthed: state.authStatus }\n}\n\nexport default connect(\n  mapStateToProps,\n  { changeAuth }\n)(UserAuth)\n"],"sourceRoot":""}